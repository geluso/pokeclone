<script src='https://api.mapbox.com/mapbox.js/v2.4.0/mapbox.js'></script>
<link href='https://api.mapbox.com/mapbox.js/v2.4.0/mapbox.css' rel='stylesheet' />

<style>
  body { margin:0; padding:0; }
  #map { position:absolute; top:0; bottom:0; width:100%; }
</style>

<div id='map' style='width: 100%; height: 100%;'></div>

<script>
L.mapbox.accessToken = 'pk.eyJ1IjoiZ2VsdXNvIiwiYSI6ImNpcWtqb2R5ZjAwMDI1cWt2cjl6amptbmcifQ.2OAw9oY9Bnd2IFA7-LVwYw';
var center = CENTER;
var zoom = INITIAL_ZOOM;
var horzBounds = HORZ_BOUNDS;
var vertBounds = VERT_BOUNDS;

var southWest = L.latLng(center[0] - vertBounds, center[1] - horzBounds),
    northEast = L.latLng(center[0] + vertBounds, center[1] + horzBounds),
    bounds = L.latLngBounds(southWest, northEast);

var map = L.mapbox.map('map', 'mapbox.streets', {
  maxBounds: bounds,
  maxZoom: 19,
  minZoom: 11
})
.setView([center[0], center[1]], zoom);

map.on('click', function (e) {
  var ll = [e.latlng.lat, e.latlng.lng];
  var poke = getPokemon(ll);
  if (poke) {
    console.log(poke);
  } else {
    console.log("no poke");
  }
});

map.legendControl.addLegend('Welcome to Poke Seattle! Please don\'t tell Facebook we\'re using their trademark "Poke" phrase.')

var offset = .00025;
if (LARGE_POKEMON) {
  offset = .01;
}
var imageUrl = 'pokemedia/images/sprites/front/143.png';
var southWest = [fremont_troll[0] - offset / 2, fremont_troll[1] - offset];
var northEast = [fremont_troll[0] + offset / 2, fremont_troll[1] + offset];
imageBounds = [southWest, northEast];
L.imageOverlay(imageUrl, imageBounds).addTo(map);

var CATCHABLE = [];

function getPokemon(latlng) {
  for (var i = 0; i < CATCHABLE.length; i++) {
    var poke = CATCHABLE[i];
    if (inside(poke.bounds, latlng)) {
      return poke;
    }
  }
}

function inside(imageBounds, latlng) {
  var aboveSouth = imageBounds[0][0] < latlng[0];
  var belowNorth = imageBounds[1][0] > latlng[0];
  var eastOfWest = imageBounds[0][1] < latlng[1];
  var westOfEast = imageBounds[1][1] > latlng[1];

  var result = aboveSouth && belowNorth && eastOfWest && westOfEast;
  return result;
}

function createPokemon(n, loc) {
  var imageUrl = 'pokemedia/images/sprites/front/' + n + '.png';
  var southWest = [loc[0] - offset / 2, loc[1] - offset];
  var northEast = [loc[0] + offset / 2, loc[1] + offset];
  imageBounds = [southWest, northEast];
  L.imageOverlay(imageUrl, imageBounds).addTo(map);
  CATCHABLE.push({
    id: n,
    bounds: imageBounds
  })
}

var spawnVertBounds = .12;
var spawnHorzBounds = .12;
function randVert() {
  return randRange(center[0] - spawnVertBounds, center[0] + spawnVertBounds);
}

function randHorz() {
  return randRange(center[1] - spawnHorzBounds + .03, center[1] + spawnHorzBounds);
}

function randRange(max, min) {
  var n = min + (max - min) * Math.random();
  return n;
}

Math.seedrandom("POKESEATTLE");
for (var i = 1; i <= 151; i++) {
  var loc = [randVert(), randHorz()];
  createPokemon(i, loc);
}

function near(latLong, spread) {
  if (!spread) {
    spread = .005;
  }

  var lat = latLong[0] + (spread / 2) * (Math.random() - .5);
  var long = latLong[1] + (spread / 2) * (Math.random() - .5);

  return [lat, long];
}

function manyDiglets(latLong) {
  // for (var i = 0; i < NUM_DIGLETS; i++) {
  //   createPokemon(50, near(latLong));
  // }
  for (var i = 0; i < NUM_DIGLETS; i++) {
    var index = Math.round(Math.random() * EASY_POKEMON.length);
    var id = parseInt(EASY_POKEMON[index][0], 10);
    createPokemon(id, near(latLong));
  }
}

if (navigator.geolocation) {
  navigator.geolocation.getCurrentPosition(function(pos) {
    var lat = pos.coords.latitude;
    var long = pos.coords.longitude;
    var radius = 100;

    manyDiglets([lat, long]);

    marker = L.circle([lat, long], radius).addTo(map);

    map.setView(L.latLng(lat, long), 18);
  });
} else {
    console.log("no GPS");
}

</script>
